import React, { useState } from "react";
import ProductCard from "./ProductCard";

const allProducts = [
  {
    id: 1,
    name: "Son d∆∞·ª°ng",
    price: 120000,
    originalPrice: 150000,
    discount: true,
    category: "Trang ƒëi·ªÉm",
    image: "https://via.placeholder.com/300x200?text=Son",
  },
  {
    id: 2,
    name: "Kem ch·ªëng n·∫Øng",
    price: 200000,
    discount: false,
    category: "ChƒÉm s√≥c da",
    image: "https://via.placeholder.com/300x200?text=Kem",
  },
  {
    id: 3,
    name: "S·ªØa r·ª≠a m·∫∑t",
    price: 170000,
    discount: false,
    category: "ChƒÉm s√≥c da",
    image: "https://via.placeholder.com/300x200?text=S·ªØa",
  },
  {
    id: 4,
    name: "Ph·∫•n ph·ªß ki·ªÅm d·∫ßu",
    price: 250000,
    discount: false,
    category: "Trang ƒëi·ªÉm",
    image: "https://via.placeholder.com/300x200?text=Ph·∫•n",
  },
  {
    id: 5,
    name: "Toner d·ªãu nh·∫π",
    price: 180000,
    discount: false,
    category: "N∆∞·ªõc hoa h·ªìng",
    image: "https://via.placeholder.com/300x200?text=Toner",
  },
  {
    id: 6,
    name: "M·∫∑t n·∫° gi·∫•y",
    price: 90000,
    originalPrice: 120000,
    discount: true,
    category: "M·∫∑t n·∫°",
    image: "https://via.placeholder.com/300x200?text=M·∫∑t+n·∫°",
  },
];

const categories = [
  "T·∫•t c·∫£",
  "Trang ƒëi·ªÉm",
  "ChƒÉm s√≥c da",
  "N∆∞·ªõc hoa h·ªìng",
  "M·∫∑t n·∫°",
];
const priceRanges = [
  { label: "T·∫•t c·∫£", min: 0, max: Infinity },
  { label: "D∆∞·ªõi 150.000", min: 0, max: 150000 },
  { label: "150.000 - 200.000", min: 150000, max: 200000 },
  { label: "Tr√™n 200.000", min: 200000, max: Infinity },
];

const ProductList = () => {
  const [selectedCategory, setSelectedCategory] = useState("T·∫•t c·∫£");
  const [selectedPrice, setSelectedPrice] = useState("T·∫•t c·∫£");
  const [onlyDiscount, setOnlyDiscount] = useState(false);

  const filteredProducts = allProducts.filter((product) => {
    const matchCategory =
      selectedCategory === "T·∫•t c·∫£" || product.category === selectedCategory;

    const priceRange = priceRanges.find((p) => p.label === selectedPrice);
    const matchPrice =
      !priceRange ||
      (product.price >= priceRange.min && product.price <= priceRange.max);

    const matchDiscount = !onlyDiscount || product.discount;

    return matchCategory && matchPrice && matchDiscount;
  });

  return (
    <div className="max-w-7xl mx-auto px-4 py-10">
      {/* Thanh l·ªçc n√¢ng cao */}
      <div className="grid md:grid-cols-3 gap-4 mb-8">
        {/* L·ªçc danh m·ª•c */}
        <div>
          <label className="block mb-1 font-medium text-gray-700">
            Danh m·ª•c
          </label>
          <select
            className="w-full border rounded-lg px-4 py-2"
            value={selectedCategory}
            onChange={(e) => setSelectedCategory(e.target.value)}
          >
            {categories.map((cat) => (
              <option key={cat}>{cat}</option>
            ))}
          </select>
        </div>

        {/* L·ªçc theo gi√° */}
        <div>
          <label className="block mb-1 font-medium text-gray-700">
            Kho·∫£ng gi√°
          </label>
          <select
            className="w-full border rounded-lg px-4 py-2"
            value={selectedPrice}
            onChange={(e) => setSelectedPrice(e.target.value)}
          >
            {priceRanges.map((range) => (
              <option key={range.label}>{range.label}</option>
            ))}
          </select>
        </div>

        {/* Ch·ªâ ∆∞u ƒë√£i */}
        <div className="flex items-center mt-6 md:mt-0">
          <input
            type="checkbox"
            id="discountOnly"
            checked={onlyDiscount}
            onChange={(e) => setOnlyDiscount(e.target.checked)}
            className="mr-2"
          />
          <label htmlFor="discountOnly" className="text-gray-700 font-medium">
            Ch·ªâ s·∫£n ph·∫©m gi·∫£m gi√°
          </label>
        </div>
      </div>

      {/* Ti√™u ƒë·ªÅ */}
      <h2 className="text-2xl font-bold text-center mb-6 text-gray-800">
        S·∫£n ph·∫©m
      </h2>

      {/* Danh s√°ch s·∫£n ph·∫©m */}
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
        {filteredProducts.length > 0 ? (
          filteredProducts
           .slice(0, 9) // üëà gi·ªõi h·∫°n 6 s·∫£n ph·∫©m
          .map((product) => (
            <ProductCard product={product} key={product.id} />
          ))
        ) : (
          <div className="col-span-full text-center py-12">
            <img
              src="https://cdn-icons-png.flaticon.com/512/11337/11337957.png"
              alt="No cosmetics found"
              className="mx-auto w-28 h-28 opacity-70 mb-4"
            />
            <p className="text-lg text-pink-600 font-semibold">
              Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p
            </p>
            <p className="text-sm text-gray-400">
              Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c l√†m m·ªõi trang ƒë·ªÉ xem th√™m s·∫£n ph·∫©m.
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProductList;
