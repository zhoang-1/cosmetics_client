import React, { useState } from "react";
import { useParams } from "react-router-dom";
import { allProducts } from "../utils/cartProducts";
import { useCart } from "./CartContext";
import { toast } from "react-toastify";

const ProductDetail = () => {
  const { id } = useParams();
  const product = allProducts.find((p) => p.id === parseInt(id));
  const [activeTab, setActiveTab] = useState("description");
  const [quantity, setQuantity] = useState(1);
  const { addToCart } = useCart();

  if (!product)
    return (
      <div className="text-center py-10 text-gray-500 text-lg">
        ‚ùå S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i.
      </div>
    );

  const handleAddToCart = () => {
    addToCart({ ...product, quantity });

    toast(
      ({ closeToast }) => (
        <div className="flex items-center gap-3">
          <img
            src={product.image}
            alt="thumb"
            className="w-12 h-12 rounded object-cover border border-pink-200"
          />
          <div>
            <p className="font-semibold text-gray-800">üéâ ƒê√£ th√™m v√†o gi·ªè</p>
            <p className="text-sm text-gray-600">{product.name}</p>
          </div>
        </div>
      ),
      {
        autoClose: 2500,
        className: "!rounded-xl !shadow-lg bg-white",
        bodyClassName: "!text-gray-700",
      }
    );
  };

  const tabClasses = (tab) =>
    `px-4 py-2 font-medium border-b-2 transition ${
      activeTab === tab
        ? "border-pink-500 text-pink-600"
        : "border-transparent text-gray-500 hover:text-pink-500"
    }`;

  return (
    <div className="max-w-7xl mx-auto px-4 py-12 grid md:grid-cols-2 gap-12 bg-white rounded-2xl shadow-xl mt-6">
      {/* ·∫¢nh s·∫£n ph·∫©m */}
      <div className="flex justify-center items-start">
        <img
          src={product.image}
          alt={product.name}
          className="rounded-xl w-full max-w-md object-cover shadow-md border border-pink-100"
        />
      </div>

      {/* Th√¥ng tin s·∫£n ph·∫©m */}
      <div className="flex flex-col">
        <h1 className="text-4xl font-bold text-gray-800 mb-4">
          {product.name}
        </h1>

        <div className="flex items-center gap-4 mb-4">
          <span className="text-3xl font-extrabold text-pink-600">
            {product.price.toLocaleString()}‚Ç´
          </span>
          {product.originalPrice && (
            <span className="line-through text-gray-400 text-lg">
              {product.originalPrice.toLocaleString()}‚Ç´
            </span>
          )}
          {product.discountPercent && (
            <span className="bg-pink-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-md">
              -{product.discountPercent}%
            </span>
          )}
        </div>

        <p className="text-gray-700 mb-4">
          S·∫£n ph·∫©m chƒÉm s√≥c da cao c·∫•p, d·ªãu nh·∫π v√† ph√π h·ª£p v·ªõi m·ªçi lo·∫°i da. ƒê∆∞·ª£c
          chi·∫øt xu·∫•t t·ª´ th√†nh ph·∫ßn thi√™n nhi√™n, gi√∫p b·∫°n r·∫°ng ng·ªùi v√† t·ª± tin m·ªói
          ng√†y.
        </p>

        {/* Ch·ªçn s·ªë l∆∞·ª£ng */}
        <div className="mb-4 flex items-center gap-4">
          <span className="text-gray-700 font-medium">S·ªë l∆∞·ª£ng:</span>
          <div className="flex items-center border rounded-full px-3 py-1">
            <button
              onClick={() => setQuantity((q) => Math.max(1, q - 1))}
              className="text-gray-600 px-2 hover:text-pink-500"
            >
              ‚àí
            </button>
            <span className="mx-2 w-6 text-center">{quantity}</span>
            <button
              onClick={() => setQuantity((q) => q + 1)}
              className="text-gray-600 px-2 hover:text-pink-500"
            >
              +
            </button>
          </div>
        </div>
        <div className="flex flex-row justify-evenly space-y-4">
          <button className="w-full md:w-auto bg-pink-500 hover:bg-pink-600 text-white py-3 px-6 rounded-full font-semibold transition duration-300 shadow-lg mb-6">
            üõí Mua ngay
          </button>
          <button
            onClick={handleAddToCart}
            className="w-full md:w-auto bg-pink-500 hover:bg-pink-600 text-white py-3 px-6 rounded-full font-semibold transition duration-300 shadow-lg mb-6"
          >
            üõçÔ∏è Th√™m v√†o gi·ªè
          </button>
        </div>
        {/* Th√™m v√†o gi·ªè */}

        {/* Tabs */}
        <div>
          <div className="flex space-x-6 border-b mb-4">
            <button
              onClick={() => setActiveTab("description")}
              className={tabClasses("description")}
            >
              M√¥ t·∫£
            </button>
            <button
              onClick={() => setActiveTab("ingredients")}
              className={tabClasses("ingredients")}
            >
              Th√†nh ph·∫ßn
            </button>
            <button
              onClick={() => setActiveTab("usage")}
              className={tabClasses("usage")}
            >
              C√°ch d√πng
            </button>
            <button
              onClick={() => setActiveTab("reviews")}
              className={tabClasses("reviews")}
            >
              ƒê√°nh gi√°
            </button>
          </div>

          {activeTab === "description" && (
            <div className="text-gray-700 leading-relaxed">
              <p>
                <strong>{product.name}</strong> l√† s·∫£n ph·∫©m m·ªπ ph·∫©m ch·∫•t l∆∞·ª£ng
                cao, gi√∫p l√†m d·ªãu, d∆∞·ª°ng ·∫©m s√¢u v√† b·∫£o v·ªá l√†n da kh·ªèi c√°c t√°c
                nh√¢n b√™n ngo√†i. ƒê√£ ƒë∆∞·ª£c ki·ªÉm ƒë·ªãnh v√† khuy√™n d√πng b·ªüi c√°c chuy√™n
                gia da li·ªÖu.
              </p>
            </div>
          )}

          {activeTab === "ingredients" && (
            <div className="text-gray-700 leading-relaxed space-y-1">
              <p>
                <strong>Chi·∫øt xu·∫•t:</strong> Hoa h·ªìng h·ªØu c∆°, l√¥ h·ªôi, vitamin E
              </p>
              <p>
                <strong>Kh√¥ng ch·ª©a:</strong> Paraben, c·ªìn kh√¥, d·∫ßu kho√°ng
              </p>
            </div>
          )}

          {activeTab === "usage" && (
            <div className="text-gray-700 leading-relaxed">
              <p>
                R·ª≠a s·∫°ch m·∫∑t, sau ƒë√≥ thoa ƒë·ªÅu s·∫£n ph·∫©m l√™n da m·ªói s√°ng v√† t·ªëi.
                Massage nh·∫π ƒë·ªÉ s·∫£n ph·∫©m th·∫©m th·∫•u t·ªët h∆°n.
              </p>
            </div>
          )}

          {activeTab === "reviews" && (
            <div className="text-gray-700">
              <p className="italic text-sm text-gray-500">
                Hi·ªán ch∆∞a c√≥ ƒë√°nh gi√° n√†o. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n ƒë√°nh gi√° s·∫£n
                ph·∫©m!
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ProductDetail;
